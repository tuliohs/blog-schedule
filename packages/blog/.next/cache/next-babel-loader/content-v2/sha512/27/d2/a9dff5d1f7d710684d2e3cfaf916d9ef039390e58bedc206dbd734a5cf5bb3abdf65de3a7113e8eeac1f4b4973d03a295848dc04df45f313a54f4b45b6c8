{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\MGS\\\\Sistemas\\\\temp\\\\courselit\\\\packages\\\\blog\\\\pages\\\\posts.js\";\nimport PropTypes from \"prop-types\";\nimport { publicCourse } from \"../types.js\";\nimport { HEADER_BLOG_POSTS_SECTION } from \"../config/strings.js\";\nimport FetchBuilder from \"../lib/fetch.js\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { getBackendAddress } from \"../lib/utils.js\";\nimport dynamic from \"next/dynamic\";\nimport defaultState from '../config/defaultState';\nconst BaseLayout = dynamic(() => import(\"../components/Public/BaseLayout\"), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"../components/Public/BaseLayout\")],\n    modules: [\"../components/Public/BaseLayout\"]\n  }\n});\nconst Items = dynamic(() => import(\"../components/Public/Items\"), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"../components/Public/Items\")],\n    modules: [\"../components/Public/Items\"]\n  }\n});\nconst useStyles = makeStyles(theme => ({\n  content: {\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(2)\n    },\n    paddingTop: theme.spacing(2)\n  },\n  header: {\n    [theme.breakpoints.up(\"md\")]: {\n      marginLeft: theme.spacing(2)\n    }\n  },\n  headerTop: {\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst generateQuery = (pageOffset = 1) => `\n  query {\n    courses: getPosts(offset: ${pageOffset}) {\n      id,\n      title,\n      description,\n      updated,\n      creatorName,\n      slug,\n      featuredImage,\n      courseId\n    }\n  }\n`;\n\nfunction Posts(props) {\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(BaseLayout, {\n    title: HEADER_BLOG_POSTS_SECTION,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      className: classes.content,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        component: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          className: classes.header,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            className: classes.headerTop,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h2\",\n              children: HEADER_BLOG_POSTS_SECTION\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Items, {\n          showLoadMoreButton: true,\n          generateQuery: generateQuery,\n          initialItems: props.courses,\n          posts: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\nconst getCourses = async backend => {\n  let courses = [];\n\n  try {\n    const fetch = new FetchBuilder().setUrl(`${backend}/graph`).setPayload(generateQuery()).setIsGraphQLEndpoint(true).build();\n    const response = await fetch.exec();\n    courses = response.courses;\n  } catch (e) {}\n\n  return courses;\n};\n\nexport async function getStaticProps() {\n  //export async function getServerSideProps(context) {\n  //const { req } = context;\n  //const courses = await getCourses(getBackendAddress(req.headers.host));\n  const courses = await getCourses(defaultState.address.backend);\n  return {\n    props: {\n      courses\n    }\n  };\n} //Posts.propTypes = {  courses: PropTypes.arrayOf(publicCourse),};\n\nexport default Posts;","map":{"version":3,"sources":["C:/Users/MGS/Sistemas/temp/courselit/packages/blog/pages/posts.js"],"names":["PropTypes","publicCourse","HEADER_BLOG_POSTS_SECTION","FetchBuilder","Grid","Typography","makeStyles","getBackendAddress","dynamic","defaultState","BaseLayout","Items","useStyles","theme","content","breakpoints","down","padding","spacing","paddingTop","header","up","marginLeft","headerTop","marginBottom","generateQuery","pageOffset","Posts","props","classes","courses","getCourses","backend","fetch","setUrl","setPayload","setIsGraphQLEndpoint","build","response","exec","e","getStaticProps","address"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport { publicCourse } from \"../types.js\";\r\nimport { HEADER_BLOG_POSTS_SECTION } from \"../config/strings.js\";\r\nimport FetchBuilder from \"../lib/fetch.js\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { getBackendAddress } from \"../lib/utils.js\";\r\nimport dynamic from \"next/dynamic\";\r\nimport defaultState from '../config/defaultState'\r\n\r\nconst BaseLayout = dynamic(() => import(\"../components/Public/BaseLayout\"));\r\nconst Items = dynamic(() => import(\"../components/Public/Items\"));\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  content: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    paddingTop: theme.spacing(2),\r\n  },\r\n  header: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n  headerTop: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst generateQuery = (pageOffset = 1) => `\r\n  query {\r\n    courses: getPosts(offset: ${pageOffset}) {\r\n      id,\r\n      title,\r\n      description,\r\n      updated,\r\n      creatorName,\r\n      slug,\r\n      featuredImage,\r\n      courseId\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Posts(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <BaseLayout title={HEADER_BLOG_POSTS_SECTION}>\r\n      <Grid item xs={12} className={classes.content}>\r\n        <Grid container component=\"section\">\r\n          <Grid item container className={classes.header}>\r\n            <Grid item xs={12} className={classes.headerTop}>\r\n              <Typography variant=\"h2\">{HEADER_BLOG_POSTS_SECTION}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Items\r\n            showLoadMoreButton={true}\r\n            generateQuery={generateQuery}\r\n            initialItems={props.courses}\r\n            posts={true}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </BaseLayout>\r\n  );\r\n}\r\n\r\nconst getCourses = async (backend) => {\r\n  let courses = [];\r\n  try {\r\n    const fetch = new FetchBuilder()\r\n      .setUrl(`${backend}/graph`)\r\n      .setPayload(generateQuery())\r\n      .setIsGraphQLEndpoint(true)\r\n      .build();\r\n    const response = await fetch.exec();\r\n    courses = response.courses;\r\n  } catch (e) { }\r\n  return courses;\r\n};\r\n\r\nexport async function getStaticProps() {\r\n  //export async function getServerSideProps(context) {\r\n  //const { req } = context;\r\n  //const courses = await getCourses(getBackendAddress(req.headers.host));\r\n  const courses = await getCourses(defaultState.address.backend);\r\n  return { props: { courses } };\r\n}\r\n\r\n//Posts.propTypes = {  courses: PropTypes.arrayOf(publicCourse),};\r\n\r\nexport default Posts;\r\n"]},"metadata":{},"sourceType":"module"}