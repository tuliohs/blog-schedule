{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/MGS/Sistemas/temp/courselit/packages/blog/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/MGS/Sistemas/temp/courselit/packages/blog/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport fetch from \"isomorphic-unfetch\";\nimport { URL_EXTENTION_POSTS, URL_EXTENTION_COURSES } from \"../config/constants.js\";\nimport { RichText as TextEditor } from \"@courselit/components-library\";\nexport var queryGraphQL = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url, query, token) {\n    var options, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = {\n              method: \"POST\",\n              headers: token ? {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \".concat(token)\n              } : {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                query: query\n              })\n            };\n            _context.next = 3;\n            return fetch(url, options);\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return response.json();\n\n          case 6:\n            response = _context.sent;\n\n            if (!(response.errors && response.errors.length > 0)) {\n              _context.next = 9;\n              break;\n            }\n\n            throw new Error(response.errors[0].message);\n\n          case 9:\n            return _context.abrupt(\"return\", response.data);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function queryGraphQL(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var capitalize = function capitalize(s) {\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\nexport var queryGraphQLWithUIEffects = function queryGraphQLWithUIEffects(backend, dispatch, networkAction, token) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(query) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              dispatch(networkAction(false));\n              _context2.next = 4;\n              return queryGraphQL(\"\".concat(backend, \"/graph\"), query, token);\n\n            case 4:\n              response = _context2.sent;\n              return _context2.abrupt(\"return\", response);\n\n            case 6:\n              _context2.prev = 6;\n              dispatch(networkAction(false));\n              return _context2.finish(6);\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0,, 6, 9]]);\n    }));\n\n    return function (_x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var formattedLocaleDate = function formattedLocaleDate(epochString) {\n  return new Date(Number(epochString)).toLocaleString(\"en-US\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\"\n  });\n}; // Regex copied from: https://stackoverflow.com/a/48675160/942589\n\nexport var makeGraphQLQueryStringFromJSObject = function makeGraphQLQueryStringFromJSObject(obj) {\n  return JSON.stringify(obj).replace(/\"([^(\")\"]+)\":/g, \"$1:\");\n};\nexport var formulateMediaUrl = function formulateMediaUrl(backend, mediaID) {\n  var generateThumbnailUrl = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return mediaID ? \"\".concat(backend, \"/media/\").concat(mediaID).concat(generateThumbnailUrl ? \"?thumb=1\" : \"\") : \"\";\n};\nexport var formulateCourseUrl = function formulateCourseUrl(course) {\n  var backend = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  return \"\".concat(backend, \"/\").concat(course.isBlog ? URL_EXTENTION_POSTS : URL_EXTENTION_COURSES, \"/\").concat(course.courseId, \"/\").concat(course.slug);\n};\nexport var getPostDescriptionSnippet = function getPostDescriptionSnippet(rawDraftJSContentState) {\n  var firstSentence = TextEditor.hydrate({\n    data: rawDraftJSContentState\n  }).getCurrentContent().getPlainText().split(\".\")[0];\n  return firstSentence ? firstSentence + \".\" : firstSentence;\n};\nexport var getGraphQLQueryFields = function getGraphQLQueryFields(jsObj) {\n  var fieldsNotPutBetweenQuotes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var queryString = \"{\";\n\n  for (var _i = 0, _Object$keys = Object.keys(jsObj); _i < _Object$keys.length; _i++) {\n    var i = _Object$keys[_i];\n\n    if (jsObj[i] !== undefined) {\n      queryString += fieldsNotPutBetweenQuotes.includes(i) ? \"\".concat(i, \": \").concat(jsObj[i], \",\") : \"\".concat(i, \": \\\"\").concat(jsObj[i], \"\\\",\");\n    }\n  }\n\n  queryString += \"}\";\n  return queryString;\n};\nexport var getObjectContainingOnlyChangedFields = function getObjectContainingOnlyChangedFields(baseline, obj) {\n  var result = {};\n\n  for (var _i2 = 0, _Object$keys2 = Object.keys(baseline); _i2 < _Object$keys2.length; _i2++) {\n    var i = _Object$keys2[_i2];\n\n    if (baseline[i] !== obj[i]) {\n      result[i] = obj[i];\n    }\n  }\n\n  return result;\n};\nexport var areObjectsDifferent = function areObjectsDifferent(baseline, obj) {\n  var onlyChangedFields = getObjectContainingOnlyChangedFields(baseline, obj);\n  return !!Object.keys(onlyChangedFields).length;\n};\nexport var getAddress = function getAddress(host) {\n  return {\n    domain: extractDomainFromURL(host),\n    backend: getBackendAddress(host),\n    frontend: \"http://\".concat(host)\n  };\n};\nexport var getBackendAddress = function getBackendAddress(host) {\n  var domain = extractDomainFromURL(host);\n\n  if (false) {\n    return \"\".concat(process.env.INSECURE === \"true\" ? \"http\" : \"https\", \"://\").concat(domain, \"/api\");\n  } else {\n    return \"http://\".concat(domain, \":8000\");\n  }\n};\n\nvar extractDomainFromURL = function extractDomainFromURL(host) {\n  return host.split(\":\")[0];\n};","map":{"version":3,"sources":["C:/Users/MGS/Sistemas/temp/courselit/packages/blog/lib/utils.js"],"names":["fetch","URL_EXTENTION_POSTS","URL_EXTENTION_COURSES","RichText","TextEditor","queryGraphQL","url","query","token","options","method","headers","Authorization","body","JSON","stringify","response","json","errors","length","Error","message","data","capitalize","s","charAt","toUpperCase","slice","queryGraphQLWithUIEffects","backend","dispatch","networkAction","formattedLocaleDate","epochString","Date","Number","toLocaleString","year","month","day","makeGraphQLQueryStringFromJSObject","obj","replace","formulateMediaUrl","mediaID","generateThumbnailUrl","formulateCourseUrl","course","isBlog","courseId","slug","getPostDescriptionSnippet","rawDraftJSContentState","firstSentence","hydrate","getCurrentContent","getPlainText","split","getGraphQLQueryFields","jsObj","fieldsNotPutBetweenQuotes","queryString","Object","keys","i","undefined","includes","getObjectContainingOnlyChangedFields","baseline","result","areObjectsDifferent","onlyChangedFields","getAddress","host","domain","extractDomainFromURL","getBackendAddress","frontend","process","env","INSECURE"],"mappings":"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","sourcesContent":["import fetch from \"isomorphic-unfetch\";\r\nimport {\r\n  URL_EXTENTION_POSTS,\r\n  URL_EXTENTION_COURSES,\r\n} from \"../config/constants.js\";\r\nimport { RichText as TextEditor } from \"@courselit/components-library\";\r\n\r\nexport const queryGraphQL = async (url, query, token) => {\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: token\r\n      ? {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      }\r\n      : { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ query }),\r\n  };\r\n  let response = await fetch(url, options);\r\n  response = await response.json();\r\n\r\n  if (response.errors && response.errors.length > 0) {\r\n    throw new Error(response.errors[0].message);\r\n  }\r\n\r\n  return response.data;\r\n};\r\n\r\nexport const capitalize = (s) => s.charAt(0).toUpperCase() + s.slice(1);\r\n\r\nexport const queryGraphQLWithUIEffects = (\r\n  backend,\r\n  dispatch,\r\n  networkAction,\r\n  token\r\n) => async (query) => {\r\n  try {\r\n    dispatch(networkAction(false));\r\n    const response = await queryGraphQL(`${backend}/graph`, query, token);\r\n\r\n    return response;\r\n  } finally {\r\n    dispatch(networkAction(false));\r\n  }\r\n};\r\n\r\nexport const formattedLocaleDate = (epochString) =>\r\n  new Date(Number(epochString)).toLocaleString(\"en-US\", {\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n  });\r\n\r\n// Regex copied from: https://stackoverflow.com/a/48675160/942589\r\nexport const makeGraphQLQueryStringFromJSObject = (obj) =>\r\n  JSON.stringify(obj).replace(/\"([^(\")\"]+)\":/g, \"$1:\");\r\n\r\nexport const formulateMediaUrl = (\r\n  backend,\r\n  mediaID,\r\n  generateThumbnailUrl = false\r\n) =>\r\n  mediaID\r\n    ? `${backend}/media/${mediaID}${generateThumbnailUrl ? \"?thumb=1\" : \"\"}`\r\n    : \"\";\r\n\r\nexport const formulateCourseUrl = (course, backend = \"\") =>\r\n  `${backend}/${course.isBlog ? URL_EXTENTION_POSTS : URL_EXTENTION_COURSES}/${course.courseId\r\n  }/${course.slug}`;\r\n\r\nexport const getPostDescriptionSnippet = (rawDraftJSContentState) => {\r\n  const firstSentence = TextEditor.hydrate({ data: rawDraftJSContentState })\r\n    .getCurrentContent()\r\n    .getPlainText()\r\n    .split(\".\")[0];\r\n\r\n  return firstSentence ? firstSentence + \".\" : firstSentence;\r\n};\r\n\r\nexport const getGraphQLQueryFields = (\r\n  jsObj,\r\n  fieldsNotPutBetweenQuotes = []\r\n) => {\r\n  let queryString = \"{\";\r\n  for (const i of Object.keys(jsObj)) {\r\n    if (jsObj[i] !== undefined) {\r\n      queryString += fieldsNotPutBetweenQuotes.includes(i)\r\n        ? `${i}: ${jsObj[i]},`\r\n        : `${i}: \"${jsObj[i]}\",`;\r\n    }\r\n  }\r\n  queryString += \"}\";\r\n\r\n  return queryString;\r\n};\r\n\r\nexport const getObjectContainingOnlyChangedFields = (baseline, obj) => {\r\n  const result = {};\r\n  for (const i of Object.keys(baseline)) {\r\n    if (baseline[i] !== obj[i]) {\r\n      result[i] = obj[i];\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const areObjectsDifferent = (baseline, obj) => {\r\n  const onlyChangedFields = getObjectContainingOnlyChangedFields(baseline, obj);\r\n  return !!Object.keys(onlyChangedFields).length;\r\n};\r\n\r\nexport const getAddress = (host) => {\r\n  return {\r\n    domain: extractDomainFromURL(host),\r\n    backend: getBackendAddress(host),\r\n    frontend: `http://${host}`,\r\n  };\r\n};\r\n\r\nexport const getBackendAddress = (host) => {\r\n  const domain = extractDomainFromURL(host);\r\n\r\n  if (process.env.NODE_ENV === \"not_word_in_production\") {\r\n    return `${process.env.INSECURE === \"true\" ? \"http\" : \"https\"\r\n      }://${domain}/api`;\r\n  } else {\r\n    return `http://${domain}:8000`;\r\n  }\r\n};\r\n\r\nconst extractDomainFromURL = (host) => {\r\n  return host.split(\":\")[0];\r\n};\r\n"]},"metadata":{},"sourceType":"module"}