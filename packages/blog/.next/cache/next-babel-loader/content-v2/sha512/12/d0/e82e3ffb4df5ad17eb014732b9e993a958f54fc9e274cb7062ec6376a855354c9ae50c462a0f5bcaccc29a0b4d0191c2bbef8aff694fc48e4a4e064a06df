{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"C:/Users/MGS/Sistemas/temp/courselit/packages/blog/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"C:/Users/MGS/Sistemas/temp/courselit/packages/blog/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"C:/Users/MGS/Sistemas/temp/courselit/packages/blog/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:/Users/MGS/Sistemas/temp/courselit/packages/blog/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\"; //import PropTypes from \"prop-types\";\n//import { connect } from \"react-redux\";\n//import { networkAction } from \"../../../redux/actions\";\n\nimport FetchBuilder from \"../../../lib/fetch\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport { BTN_LOAD_MORE } from \"../../../config/strings\";\nimport Post from \"./Post\"; //import { addressProps, publicCourse } from \"../../../types\";\n\nimport Course from \"./Course\";\nimport { makeStyles } from \"@material-ui/styles\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    loadMoreBtn: _defineProperty({}, theme.breakpoints.up(\"md\"), {\n      marginLeft: theme.spacing(2)\n    })\n  };\n});\n\nvar List = function List(props) {\n  var _useState = useState(props.initialItems || []),\n      courses = _useState[0],\n      setCourses = _useState[1];\n\n  var _useState2 = useState(2),\n      offset = _useState2[0],\n      setOffset = _useState2[1];\n\n  var _useState3 = useState(typeof props.showLoadMoreButton === \"boolean\" ? props.showLoadMoreButton : false),\n      shouldShowLoadMoreButton = _useState3[0],\n      setShouldShowLoadMoreButton = _useState3[1];\n\n  var generateQuery = props.generateQuery;\n  var posts = typeof props.posts === \"boolean\" ? props.posts : false;\n  var classes = useStyles();\n  useEffect(function () {\n    getPosts();\n  }, [offset]);\n\n  var getPosts = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _props$address, fetch, response;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              //verify what is it\n              //props.dispatch && props.dispatch(networkAction(true));\n              fetch = new FetchBuilder().setUrl(\"\".concat(props === null || props === void 0 ? void 0 : (_props$address = props.address) === null || _props$address === void 0 ? void 0 : _props$address.backend, \"/graph\") || 'localhost:8080').setPayload(generateQuery(offset)).setIsGraphQLEndpoint(true).build();\n              _context.next = 4;\n              return fetch.exec();\n\n            case 4:\n              response = _context.sent;\n\n              if (response.courses) {\n                if (response.courses.length > 0) {\n                  setCourses([].concat(_toConsumableArray(courses), _toConsumableArray(response.courses)));\n                } else {\n                  setShouldShowLoadMoreButton(false);\n                }\n              }\n\n            case 6:\n              _context.prev = 6;\n              props.dispatch && props.dispatch(networkAction(false));\n              return _context.finish(6);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0,, 6, 9]]);\n    }));\n\n    return function getPosts() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return courses.length > 0 ? /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Grid, {\n      item: true,\n      container: true,\n      xs: 12,\n      justify: \"space-between\",\n      children: courses.map(function (x, index) {\n        return posts ? /*#__PURE__*/_jsx(Post, _objectSpread({}, x), index) : /*#__PURE__*/_jsx(Course, _objectSpread({}, x), index);\n      })\n    }), shouldShowLoadMoreButton && courses.length > 0 && /*#__PURE__*/_jsx(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsx(Button, {\n        variant: \"contained\",\n        disableElevation: true,\n        onClick: function onClick() {\n          return setOffset(offset + 1);\n        },\n        className: classes.loadMoreBtn,\n        children: BTN_LOAD_MORE\n      })\n    })]\n  }) : /*#__PURE__*/_jsx(_Fragment, {});\n}; //List.propTypes = {\n//  generateQuery: PropTypes.func.isRequired,\n//  initialItems: PropTypes.arrayOf(publicCourse),\n//  showLoadMoreButton: PropTypes.bool,\n//  dispatch: PropTypes.func.isRequired,\n//  posts: PropTypes.bool,\n//  address: addressProps,\n//};\n//const mapStateToProps = (state) => ({address: state.address,})\n//const mapDispatchToProps = (dispatch) => ({  dispatch: dispatch,});\n//export default connect(mapStateToProps, mapDispatchToProps)(List);\n\n\nexport default List;","map":null,"metadata":{},"sourceType":"module"}