{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\MGS\\\\Sistemas\\\\temp\\\\courselit\\\\packages\\\\blog\\\\pages\\\\index.js\";\n//import { connect } from \"react-redux\";\n//import PropTypes from \"prop-types\";\n//import { publicCourse, siteInfoProps } from \"../types.js\";\nimport defaultState from '../config/defaultState';\nimport { HEADER_BLOG_POSTS_SECTION, BTN_VIEW_ALL } from \"../config/strings.js\";\nimport { Button, Grid, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Link from \"next/link\";\nimport FetchBuilder from \"../lib/fetch.js\";\nimport { getBackendAddress } from \"../lib/utils.js\";\nimport dynamic from \"next/dynamic\";\nimport { useContext } from \"react\";\nimport MyContext from \"../context/MyContext.js\";\nconst BaseLayout = dynamic(() => import(\"../components/Public/BaseLayout\"), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"../components/Public/BaseLayout\")],\n    modules: [\"../components/Public/BaseLayout\"]\n  }\n});\nconst Items = dynamic(() => import(\"../components/Public/Items\"), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"../components/Public/Items\")],\n    modules: [\"../components/Public/Items\"]\n  }\n});\nconst useStyles = makeStyles(theme => ({\n  content: {\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(2)\n    },\n    paddingTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  },\n  header: {\n    [theme.breakpoints.up(\"md\")]: {\n      marginLeft: theme.spacing(2)\n    }\n  },\n  headerTop: {\n    marginBottom: theme.spacing(2)\n  },\n  link: {\n    textDecoration: \"none\",\n    color: \"inherit\"\n  },\n  callToAction: {\n    [theme.breakpoints.up(\"md\")]: {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n\nconst generateQuery = (pageOffset = 1) => `\n  query {\n    courses: getPosts(offset: ${pageOffset}) {\n      id,\n      title,\n      description,\n      updated,\n      creatorName,\n      slug,\n      featuredImage,\n      courseId\n    }\n  }\n`;\n\nconst Index = props => {\n  const classes = useStyles();\n  const {\n    siteInfo\n  } = useContext(MyContext);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BaseLayout, {\n      title: siteInfo.subtitle,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.content,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          component: \"section\",\n          children: props.courses.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              container: true,\n              className: classes.header,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                className: classes.headerTop,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h2\",\n                  children: HEADER_BLOG_POSTS_SECTION\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Items, {\n              generateQuery: generateQuery,\n              initialItems: props.courses,\n              posts: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                disableElevation: true,\n                className: classes.callToAction,\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  href: \"/posts\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    className: classes.link,\n                    children: BTN_VIEW_ALL\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nconst getCourses = async backend => {\n  let courses = [];\n\n  try {\n    const fetch = new FetchBuilder().setUrl(`${backend}/graph`).setPayload(generateQuery()).setIsGraphQLEndpoint(true).build();\n    const response = await fetch.exec();\n    courses = response.courses;\n  } catch (e) {}\n\n  return courses;\n};\n\nexport async function getStaticProps() {\n  //export async function getServerSideProps(context) {\n  //const { req } = context;\n  //const courses = await getCourses(getBackendAddress(req.headers.host));\n  const courses = await getCourses(defaultState.address.backend);\n  return {\n    props: {\n      courses\n    }\n  };\n} //Index.propTypes = {\n//  courses: PropTypes.arrayOf(publicCourse),\n//  siteinfo: siteInfoProps,\n//}; \n//const mapStateToProps = (state) => ({  siteinfo: state.siteinfo,});\n//export default connect(mapStateToProps)(Index);\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/MGS/Sistemas/temp/courselit/packages/blog/pages/index.js"],"names":["defaultState","HEADER_BLOG_POSTS_SECTION","BTN_VIEW_ALL","Button","Grid","Typography","makeStyles","Link","FetchBuilder","getBackendAddress","dynamic","useContext","MyContext","BaseLayout","Items","useStyles","theme","content","breakpoints","down","padding","spacing","paddingTop","marginBottom","header","up","marginLeft","headerTop","link","textDecoration","color","callToAction","generateQuery","pageOffset","Index","props","classes","siteInfo","subtitle","courses","length","getCourses","backend","fetch","setUrl","setPayload","setIsGraphQLEndpoint","build","response","exec","e","getStaticProps","address"],"mappings":"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","sourcesContent":["//import { connect } from \"react-redux\";\r\n//import PropTypes from \"prop-types\";\r\n//import { publicCourse, siteInfoProps } from \"../types.js\";\r\nimport defaultState from '../config/defaultState'\r\nimport { HEADER_BLOG_POSTS_SECTION, BTN_VIEW_ALL } from \"../config/strings.js\";\r\nimport { Button, Grid, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport Link from \"next/link\";\r\nimport FetchBuilder from \"../lib/fetch.js\";\r\nimport { getBackendAddress } from \"../lib/utils.js\";\r\nimport dynamic from \"next/dynamic\";\r\nimport { useContext } from \"react\";\r\nimport MyContext from \"../context/MyContext.js\";\r\n\r\nconst BaseLayout = dynamic(() => import(\"../components/Public/BaseLayout\"));\r\nconst Items = dynamic(() => import(\"../components/Public/Items\"));\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  content: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    paddingTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  header: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n  headerTop: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"inherit\",\r\n  },\r\n  callToAction: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst generateQuery = (pageOffset = 1) => `\r\n  query {\r\n    courses: getPosts(offset: ${pageOffset}) {\r\n      id,\r\n      title,\r\n      description,\r\n      updated,\r\n      creatorName,\r\n      slug,\r\n      featuredImage,\r\n      courseId\r\n    }\r\n  }\r\n`;\r\n\r\nconst Index = (props) => {\r\n  const classes = useStyles();\r\n  const { siteInfo } = useContext(MyContext)\r\n  return (\r\n    <>\r\n      <BaseLayout title={siteInfo.subtitle}>\r\n        <Grid item xs={12} className={classes.content}>\r\n          <Grid container component=\"section\">\r\n            {props.courses.length > 0 && (\r\n              <>\r\n                <Grid item container className={classes.header}>\r\n                  <Grid item xs={12} className={classes.headerTop}>\r\n                    <Typography variant=\"h2\">\r\n                      {HEADER_BLOG_POSTS_SECTION}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                <Items\r\n                  generateQuery={generateQuery}\r\n                  initialItems={props.courses}\r\n                  posts={true}\r\n                />\r\n                <Grid item xs={12}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    disableElevation\r\n                    className={classes.callToAction}\r\n                  >\r\n                    <Link href=\"/posts\">\r\n                      <a className={classes.link}>{BTN_VIEW_ALL}</a>\r\n                    </Link>\r\n                  </Button>\r\n                </Grid>\r\n              </>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </BaseLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nconst getCourses = async (backend) => {\r\n  let courses = [];\r\n  try {\r\n    const fetch = new FetchBuilder()\r\n      .setUrl(`${backend}/graph`)\r\n      .setPayload(generateQuery())\r\n      .setIsGraphQLEndpoint(true)\r\n      .build();\r\n    const response = await fetch.exec();\r\n    courses = response.courses;\r\n  } catch (e) { }\r\n  return courses;\r\n};\r\n\r\nexport async function getStaticProps() {\r\n  //export async function getServerSideProps(context) {\r\n  //const { req } = context;\r\n  //const courses = await getCourses(getBackendAddress(req.headers.host));\r\n  const courses = await getCourses(defaultState.address.backend);\r\n  return { props: { courses } };\r\n}\r\n\r\n//Index.propTypes = {\r\n//  courses: PropTypes.arrayOf(publicCourse),\r\n//  siteinfo: siteInfoProps,\r\n//}; \r\n//const mapStateToProps = (state) => ({  siteinfo: state.siteinfo,});\r\n//export default connect(mapStateToProps)(Index);\r\nexport default (Index);\r\n"]},"metadata":{},"sourceType":"module"}