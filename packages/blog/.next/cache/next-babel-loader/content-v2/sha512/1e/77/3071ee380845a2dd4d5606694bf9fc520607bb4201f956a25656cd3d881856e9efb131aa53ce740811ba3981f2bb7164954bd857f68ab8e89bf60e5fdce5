{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/MGS/Sistemas/temp/courselit/packages/blog/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"C:/Users/MGS/Sistemas/temp/courselit/packages/blog/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"C:/Users/MGS/Sistemas/temp/courselit/packages/blog/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:/Users/MGS/Sistemas/temp/courselit/packages/blog/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\MGS\\\\Sistemas\\\\temp\\\\courselit\\\\packages\\\\blog\\\\components\\\\Public\\\\Items\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\"; //import PropTypes from \"prop-types\";\n//import { connect } from \"react-redux\";\n//import { networkAction } from \"../../../redux/actions\";\n\nimport FetchBuilder from \"../../../lib/fetch\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport { BTN_LOAD_MORE } from \"../../../config/strings\";\nimport Post from \"./Post\"; //import { addressProps, publicCourse } from \"../../../types\";\n\nimport Course from \"./Course\";\nimport { makeStyles } from \"@material-ui/styles\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    loadMoreBtn: _defineProperty({}, theme.breakpoints.up(\"md\"), {\n      marginLeft: theme.spacing(2)\n    })\n  };\n});\n\nvar List = function List(props) {\n  _s();\n\n  var _useState = useState(props.initialItems || []),\n      courses = _useState[0],\n      setCourses = _useState[1];\n\n  var _useState2 = useState(2),\n      offset = _useState2[0],\n      setOffset = _useState2[1];\n\n  var _useState3 = useState(typeof props.showLoadMoreButton === \"boolean\" ? props.showLoadMoreButton : false),\n      shouldShowLoadMoreButton = _useState3[0],\n      setShouldShowLoadMoreButton = _useState3[1];\n\n  var generateQuery = props.generateQuery;\n  var posts = typeof props.posts === \"boolean\" ? props.posts : false;\n  var classes = useStyles();\n  useEffect(function () {\n    getPosts();\n  }, [offset]);\n\n  var getPosts = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _props$address, fetch, response;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              //verify what is it\n              //props.dispatch && props.dispatch(networkAction(true));\n              fetch = new FetchBuilder().setUrl(\"\".concat(props === null || props === void 0 ? void 0 : (_props$address = props.address) === null || _props$address === void 0 ? void 0 : _props$address.backend, \"/graph\") || 'localhost:8080').setPayload(generateQuery(offset)).setIsGraphQLEndpoint(true).build();\n              _context.next = 4;\n              return fetch.exec();\n\n            case 4:\n              response = _context.sent;\n\n              if (response.courses) {\n                if (response.courses.length > 0) {\n                  setCourses([].concat(_toConsumableArray(courses), _toConsumableArray(response.courses)));\n                } else {\n                  setShouldShowLoadMoreButton(false);\n                }\n              }\n\n            case 6:\n              _context.prev = 6;\n              props.dispatch && props.dispatch(networkAction(false));\n              return _context.finish(6);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0,, 6, 9]]);\n    }));\n\n    return function getPosts() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return courses.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      xs: 12,\n      justify: \"space-between\",\n      children: courses.map(function (x, index) {\n        return posts ? /*#__PURE__*/_jsxDEV(Post, _objectSpread({}, x), index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 19\n        }, _this) : /*#__PURE__*/_jsxDEV(Course, _objectSpread({}, x), index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 49\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, _this), shouldShowLoadMoreButton && courses.length > 0 && /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        disableElevation: true,\n        onClick: function onClick() {\n          return setOffset(offset + 1);\n        },\n        className: classes.loadMoreBtn,\n        children: BTN_LOAD_MORE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}; //List.propTypes = {\n//  generateQuery: PropTypes.func.isRequired,\n//  initialItems: PropTypes.arrayOf(publicCourse),\n//  showLoadMoreButton: PropTypes.bool,\n//  dispatch: PropTypes.func.isRequired,\n//  posts: PropTypes.bool,\n//  address: addressProps,\n//};\n//const mapStateToProps = (state) => ({address: state.address,})\n//const mapDispatchToProps = (dispatch) => ({  dispatch: dispatch,});\n//export default connect(mapStateToProps, mapDispatchToProps)(List);\n\n\n_s(List, \"v5PZOzJneuD/9cQKZey9dzyhmmc=\", false, function () {\n  return [useStyles];\n});\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["C:/Users/MGS/Sistemas/temp/courselit/packages/blog/components/Public/Items/index.js"],"names":["React","useState","useEffect","FetchBuilder","Grid","Button","BTN_LOAD_MORE","Post","Course","makeStyles","useStyles","theme","loadMoreBtn","breakpoints","up","marginLeft","spacing","List","props","initialItems","courses","setCourses","offset","setOffset","showLoadMoreButton","shouldShowLoadMoreButton","setShouldShowLoadMoreButton","generateQuery","posts","classes","getPosts","fetch","setUrl","address","backend","setPayload","setIsGraphQLEndpoint","build","exec","response","length","dispatch","networkAction","map","x","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n//import PropTypes from \"prop-types\";\r\n//import { connect } from \"react-redux\";\r\n//import { networkAction } from \"../../../redux/actions\";\r\nimport FetchBuilder from \"../../../lib/fetch\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport { BTN_LOAD_MORE } from \"../../../config/strings\";\r\nimport Post from \"./Post\";\r\n//import { addressProps, publicCourse } from \"../../../types\";\r\nimport Course from \"./Course\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  loadMoreBtn: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst List = (props) => {\r\n  const [courses, setCourses] = useState(props.initialItems || []);\r\n  const [offset, setOffset] = useState(2);\r\n  const [shouldShowLoadMoreButton, setShouldShowLoadMoreButton] = useState(\r\n    typeof props.showLoadMoreButton === \"boolean\"\r\n      ? props.showLoadMoreButton\r\n      : false\r\n  );\r\n  const { generateQuery } = props;\r\n  const posts = typeof props.posts === \"boolean\" ? props.posts : false;\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [offset]);\r\n\r\n  const getPosts = async () => {\r\n    try {\r\n      //verify what is it\r\n      //props.dispatch && props.dispatch(networkAction(true));\r\n      const fetch = new FetchBuilder()\r\n        .setUrl(`${props?.address?.backend}/graph` || 'localhost:8080')\r\n        .setPayload(generateQuery(offset))\r\n        .setIsGraphQLEndpoint(true)\r\n        .build();\r\n      const response = await fetch.exec();\r\n      if (response.courses) {\r\n        if (response.courses.length > 0) {\r\n          setCourses([...courses, ...response.courses]);\r\n        } else {\r\n          setShouldShowLoadMoreButton(false);\r\n        }\r\n      }\r\n    } finally {\r\n      props.dispatch && props.dispatch(networkAction(false));\r\n    }\r\n  };\r\n\r\n  return courses.length > 0 ? (\r\n    <>\r\n      <Grid item container xs={12} justify=\"space-between\">\r\n        {courses.map((x, index) =>\r\n          posts ? <Post key={index} {...x} /> : <Course key={index} {...x} />\r\n        )}\r\n      </Grid>\r\n      {shouldShowLoadMoreButton && courses.length > 0 && (\r\n        <Grid item xs={12}>\r\n          <Button\r\n            variant=\"contained\"\r\n            disableElevation\r\n            onClick={() => setOffset(offset + 1)}\r\n            className={classes.loadMoreBtn}\r\n          >\r\n            {BTN_LOAD_MORE}\r\n          </Button>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\n\r\n//List.propTypes = {\r\n//  generateQuery: PropTypes.func.isRequired,\r\n//  initialItems: PropTypes.arrayOf(publicCourse),\r\n//  showLoadMoreButton: PropTypes.bool,\r\n//  dispatch: PropTypes.func.isRequired,\r\n//  posts: PropTypes.bool,\r\n//  address: addressProps,\r\n//};\r\n//const mapStateToProps = (state) => ({address: state.address,})\r\n//const mapDispatchToProps = (dispatch) => ({  dispatch: dispatch,});\r\n//export default connect(mapStateToProps, mapDispatchToProps)(List);\r\nexport default List\r\n"]},"metadata":{},"sourceType":"module"}