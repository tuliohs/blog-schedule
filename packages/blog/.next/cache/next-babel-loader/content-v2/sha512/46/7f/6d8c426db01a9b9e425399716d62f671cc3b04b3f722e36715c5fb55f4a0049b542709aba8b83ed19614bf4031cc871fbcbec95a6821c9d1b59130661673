{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { publicCourse } from \"../types.js\";\nimport { HEADER_BLOG_POSTS_SECTION } from \"../config/strings.js\";\nimport FetchBuilder from \"../lib/fetch.js\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { getBackendAddress } from \"../lib/utils.js\";\nimport dynamic from \"next/dynamic\";\nimport defaultState from '../config/defaultState';\nconst BaseLayout = dynamic(() => import(\"../components/Public/BaseLayout\"), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"../components/Public/BaseLayout\")],\n    modules: [\"../components/Public/BaseLayout\"]\n  }\n});\nconst Items = dynamic(() => import(\"../components/Public/Items\"), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"../components/Public/Items\")],\n    modules: [\"../components/Public/Items\"]\n  }\n});\nconst useStyles = makeStyles(theme => ({\n  content: {\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(2)\n    },\n    paddingTop: theme.spacing(2)\n  },\n  header: {\n    [theme.breakpoints.up(\"md\")]: {\n      marginLeft: theme.spacing(2)\n    }\n  },\n  headerTop: {\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst generateQuery = (pageOffset = 1) => `\n  query {\n    courses: getPosts(offset: ${pageOffset}) {\n      id,\n      title,\n      description,\n      updated,\n      creatorName,\n      slug,\n      featuredImage,\n      courseId\n    }\n  }\n`;\n\nfunction Posts(props) {\n  const classes = useStyles();\n  return /*#__PURE__*/_jsx(BaseLayout, {\n    title: HEADER_BLOG_POSTS_SECTION,\n    children: /*#__PURE__*/_jsx(Grid, {\n      item: true,\n      xs: 12,\n      className: classes.content,\n      children: /*#__PURE__*/_jsxs(Grid, {\n        container: true,\n        component: \"section\",\n        children: [/*#__PURE__*/_jsx(Grid, {\n          item: true,\n          container: true,\n          className: classes.header,\n          children: /*#__PURE__*/_jsx(Grid, {\n            item: true,\n            xs: 12,\n            className: classes.headerTop,\n            children: /*#__PURE__*/_jsx(Typography, {\n              variant: \"h2\",\n              children: HEADER_BLOG_POSTS_SECTION\n            })\n          })\n        }), /*#__PURE__*/_jsx(Items, {\n          showLoadMoreButton: true,\n          generateQuery: generateQuery,\n          initialItems: props.courses,\n          posts: true\n        })]\n      })\n    })\n  });\n}\n\nconst getCourses = async backend => {\n  console.log(backend, 'backendbackend');\n  let courses = [];\n\n  try {\n    const fetch = new FetchBuilder().setUrl(`${backend}/graph`).setPayload(generateQuery()).setIsGraphQLEndpoint(true).build();\n    const response = await fetch.exec();\n    courses = response.courses;\n  } catch (e) {}\n\n  return courses;\n};\n\nexport async function getStaticProps() {\n  //export async function getServerSideProps(context) {\n  //const { req } = context;\n  //const courses = await getCourses(getBackendAddress(req.headers.host));\n  const courses = await getCourses(defaultState.address.backend);\n  return {\n    props: {\n      courses\n    }\n  };\n} //Posts.propTypes = {  courses: PropTypes.arrayOf(publicCourse),};\n\nexport default Posts;","map":null,"metadata":{},"sourceType":"module"}