{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/MGS/Sistemas/temp/courselit/packages/blog/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/MGS/Sistemas/temp/courselit/packages/blog/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport fetch from \"isomorphic-unfetch\";\nimport { URL_EXTENTION_POSTS, URL_EXTENTION_COURSES } from \"../config/constants.js\";\nimport { RichText as TextEditor } from \"@courselit/components-library\";\nexport var queryGraphQL = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url, query, token) {\n    var options, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = {\n              method: \"POST\",\n              headers: token ? {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \".concat(token)\n              } : {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                query: query\n              })\n            };\n            _context.next = 3;\n            return fetch(url, options);\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return response.json();\n\n          case 6:\n            response = _context.sent;\n\n            if (!(response.errors && response.errors.length > 0)) {\n              _context.next = 9;\n              break;\n            }\n\n            throw new Error(response.errors[0].message);\n\n          case 9:\n            return _context.abrupt(\"return\", response.data);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function queryGraphQL(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var capitalize = function capitalize(s) {\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\nexport var queryGraphQLWithUIEffects = function queryGraphQLWithUIEffects(backend, dispatch, networkAction, token) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(query) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              dispatch(networkAction(false));\n              _context2.next = 4;\n              return queryGraphQL(\"\".concat(backend, \"/graph\"), query, token);\n\n            case 4:\n              response = _context2.sent;\n              return _context2.abrupt(\"return\", response);\n\n            case 6:\n              _context2.prev = 6;\n              dispatch(networkAction(false));\n              return _context2.finish(6);\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0,, 6, 9]]);\n    }));\n\n    return function (_x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var formattedLocaleDate = function formattedLocaleDate(epochString) {\n  return new Date(Number(epochString)).toLocaleString(\"en-US\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\"\n  });\n}; // Regex copied from: https://stackoverflow.com/a/48675160/942589\n\nexport var makeGraphQLQueryStringFromJSObject = function makeGraphQLQueryStringFromJSObject(obj) {\n  return JSON.stringify(obj).replace(/\"([^(\")\"]+)\":/g, \"$1:\");\n};\nexport var formulateMediaUrl = function formulateMediaUrl(backend, mediaID) {\n  var generateThumbnailUrl = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return mediaID ? \"\".concat(backend, \"/media/\").concat(mediaID).concat(generateThumbnailUrl ? \"?thumb=1\" : \"\") : \"\";\n};\nexport var formulateCourseUrl = function formulateCourseUrl(course) {\n  var backend = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  return \"\".concat(backend, \"/\").concat(course.isBlog ? URL_EXTENTION_POSTS : URL_EXTENTION_COURSES, \"/\").concat(course.courseId, \"/\").concat(course.slug);\n};\nexport var getPostDescriptionSnippet = function getPostDescriptionSnippet(rawDraftJSContentState) {\n  var firstSentence = TextEditor.hydrate({\n    data: rawDraftJSContentState\n  }).getCurrentContent().getPlainText().split(\".\")[0];\n  return firstSentence ? firstSentence + \".\" : firstSentence;\n};\nexport var getGraphQLQueryFields = function getGraphQLQueryFields(jsObj) {\n  var fieldsNotPutBetweenQuotes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var queryString = \"{\";\n\n  for (var _i = 0, _Object$keys = Object.keys(jsObj); _i < _Object$keys.length; _i++) {\n    var i = _Object$keys[_i];\n\n    if (jsObj[i] !== undefined) {\n      queryString += fieldsNotPutBetweenQuotes.includes(i) ? \"\".concat(i, \": \").concat(jsObj[i], \",\") : \"\".concat(i, \": \\\"\").concat(jsObj[i], \"\\\",\");\n    }\n  }\n\n  queryString += \"}\";\n  return queryString;\n};\nexport var getObjectContainingOnlyChangedFields = function getObjectContainingOnlyChangedFields(baseline, obj) {\n  var result = {};\n\n  for (var _i2 = 0, _Object$keys2 = Object.keys(baseline); _i2 < _Object$keys2.length; _i2++) {\n    var i = _Object$keys2[_i2];\n\n    if (baseline[i] !== obj[i]) {\n      result[i] = obj[i];\n    }\n  }\n\n  return result;\n};\nexport var areObjectsDifferent = function areObjectsDifferent(baseline, obj) {\n  var onlyChangedFields = getObjectContainingOnlyChangedFields(baseline, obj);\n  return !!Object.keys(onlyChangedFields).length;\n};\nexport var getAddress = function getAddress(host) {\n  return {\n    domain: extractDomainFromURL(host),\n    backend: getBackendAddress(host),\n    frontend: \"http://\".concat(host)\n  };\n};\nexport var getBackendAddress = function getBackendAddress(host) {\n  var domain = extractDomainFromURL(host);\n\n  if (false) {\n    return \"\".concat(process.env.INSECURE === \"true\" ? \"http\" : \"https\", \"://\").concat(domain, \"/api\");\n  } else {\n    return \"http://\".concat(domain, \":8000\");\n  }\n};\n\nvar extractDomainFromURL = function extractDomainFromURL(host) {\n  return host.split(\":\")[0];\n};","map":null,"metadata":{},"sourceType":"module"}