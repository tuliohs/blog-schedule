{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useContext, useState } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport { Menu } from \"@material-ui/icons\";\nimport { Grid, LinearProgress, Toolbar, Typography } from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\"; //import PropTypes from \"prop-types\";\n\nimport AppToast from \"../../../AppToast.js\"; //import { connect } from \"react-redux\";\n//import { siteInfoProps, link, profileProps } from \"../../../../types.js\";\n\nimport Header from \"../Header.js\";\nimport { MAIN_MENU_ITEM_DASHBOARD, MAIN_MENU_ITEM_PROFILE } from \"../../../../config/strings.js\";\nimport { NAVIGATION_CATEGORY_MAIN } from \"../../../../config/constants.js\";\nimport MenuItem from \"./MenuItem.js\";\nimport MyContext from \"../../../../context/MyContext.js\"; //import Template from \"../Template.js\";\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  drawer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0\n    }\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1\n  },\n  menuButton: {\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\"\n    }\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth\n  },\n  content: {\n    flexGrow: 1\n  },\n  activeItem: {\n    background: \"#d6d6d6\"\n  },\n  visitSiteLink: {\n    color: \"#fff\"\n  },\n  showProgressBar: props => ({\n    visibility: props.networkAction ? \"visible\" : \"hidden\"\n  }),\n  menuTitle: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst Scaffold = ({\n  children,\n  props\n}) => {\n  const classes = useStyles(); //= useStyles(props);\n\n  const theme = useTheme();\n  const {\n    siteInfo,\n    profile,\n    navigation\n  } = useContext(MyContext);\n  const {\n    0: mobileOpen,\n    1: setMobileOpen\n  } = useState(false);\n\n  function handleDrawerToggle() {\n    setMobileOpen(!mobileOpen);\n  }\n\n  const makeDrawer = (forMobile = false) => /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(Grid, {\n      container: true,\n      alignItems: \"center\",\n      className: classes.toolbar,\n      children: /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        className: classes.menuTitle,\n        children: /*#__PURE__*/_jsx(Typography, {\n          variant: \"h5\",\n          children: siteInfo.title\n        })\n      })\n    }), /*#__PURE__*/_jsx(Divider, {}), /*#__PURE__*/_jsxs(List, {\n      children: [profile.fetched && /*#__PURE__*/_jsxs(_Fragment, {\n        children: [props.profile.id && /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsx(MenuItem, {\n            link: {\n              text: MAIN_MENU_ITEM_PROFILE,\n              destination: `/profile/${props.profile.userId && props.profile.userId !== -1 ? props.profile.userId : props.profile.id}`,\n              category: NAVIGATION_CATEGORY_MAIN,\n              newTab: false\n            }\n          }), /*#__PURE__*/_jsx(Divider, {})]\n        }), (props.profile.isAdmin || props.profile.isCreator) && /*#__PURE__*/_jsx(MenuItem, {\n          link: {\n            text: MAIN_MENU_ITEM_DASHBOARD,\n            destination: \"/dashboard/courses\",\n            category: NAVIGATION_CATEGORY_MAIN,\n            newTab: false\n          }\n        })]\n      }), navigation && navigation.map(link => forMobile ? /*#__PURE__*/_jsx(MenuItem, {\n        link: link,\n        closeDrawer: handleDrawerToggle\n      }, link.destination) : /*#__PURE__*/_jsx(MenuItem, {\n        link: link\n      }, link.destination))]\n    })]\n  });\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsx(CssBaseline, {}), /*#__PURE__*/_jsx(AppBar, {\n      position: \"fixed\",\n      className: classes.appBar,\n      children: /*#__PURE__*/_jsxs(Toolbar, {\n        children: [/*#__PURE__*/_jsx(IconButton, {\n          color: \"inherit\",\n          \"aria-label\": \"open drawer\",\n          edge: \"start\",\n          onClick: handleDrawerToggle,\n          className: classes.menuButton,\n          children: /*#__PURE__*/_jsx(Menu, {})\n        }), /*#__PURE__*/_jsx(Header, {})]\n      })\n    }), /*#__PURE__*/_jsxs(\"nav\", {\n      className: classes.drawer,\n      \"aria-label\": \"menu\",\n      children: [/*#__PURE__*/_jsx(Hidden, {\n        smUp: true,\n        implementation: \"css\",\n        children: /*#__PURE__*/_jsx(Drawer, {\n          variant: \"temporary\",\n          anchor: theme.direction === \"rtl\" ? \"right\" : \"left\",\n          open: mobileOpen,\n          onClose: handleDrawerToggle,\n          classes: {\n            paper: classes.drawerPaper\n          },\n          ModalProps: {\n            keepMounted: true // Better open performance on mobile.\n\n          },\n          children: makeDrawer(true)\n        })\n      }), /*#__PURE__*/_jsx(Hidden, {\n        xsDown: true,\n        implementation: \"css\",\n        children: /*#__PURE__*/_jsx(Drawer, {\n          classes: {\n            paper: classes.drawerPaper\n          },\n          variant: \"permanent\",\n          open: true,\n          children: makeDrawer()\n        })\n      })]\n    }), /*#__PURE__*/_jsx(\"a\", {\n      children: \"scafoolf\"\n    }), /*#__PURE__*/_jsxs(\"main\", {\n      className: classes.content,\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: classes.toolbar\n      }), /*#__PURE__*/_jsx(LinearProgress, {\n        className: classes.showProgressBar\n      }), children]\n    }), /*#__PURE__*/_jsx(AppToast, {})]\n  });\n}; //Scaffold.propTypes = {\n//  children: PropTypes.object,\n//siteinfo: siteInfoProps,\n//navigation: PropTypes.arrayOf(link),\n//networkAction: PropTypes.bool.isRequired,\n//profile: profileProps,\n//};\n//const mapStateToProps = (state) => ({\n//  siteinfo: state.siteinfo,\n//  navigation: state.navigation.filter((link) => link.category === \"main\"),\n//  networkAction: state.networkAction,\n//  profile: state.profile,\n//});\n//export default connect(mapStateToProps)(Scaffold);\n\n\nexport default Scaffold;","map":null,"metadata":{},"sourceType":"module"}