{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"C:/Users/MGS/Sistemas/temp/courselit/packages/blog/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/MGS/Sistemas/temp/courselit/packages/blog/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { addressProps, authProps, publicCourse, siteInfoProps } from \"../../types\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { ENROLL_BUTTON_TEXT } from \"../../config/strings\";\nimport { connect } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport fetch from \"isomorphic-unfetch\";\n\nvar Stripe = function Stripe(props) {\n  var course = props.course,\n      siteInfo = props.siteInfo,\n      auth = props.auth,\n      address = props.address;\n  var stripePromise = loadStripe(siteInfo.stripePublishableKey);\n  var router = useRouter();\n\n  var handleClick = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var initiatePaymentResponse;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return makePaymentRequest({\n                courseId: course.id,\n                backend: address.backend,\n                token: auth.token,\n                frontend: address.frontend,\n                router: router\n              });\n\n            case 2:\n              initiatePaymentResponse = _context.sent;\n\n              if (!(initiatePaymentResponse.status === 401)) {\n                _context.next = 6;\n                break;\n              }\n\n              router.push(\"/login?redirect=\".concat(router.asPath));\n              return _context.abrupt(\"return\");\n\n            case 6:\n              _context.prev = 6;\n              _context.next = 9;\n              return initiatePaymentResponse.json();\n\n            case 9:\n              initiatePaymentResponse = _context.sent;\n              _context.t0 = redirectToStripeCheckout;\n              _context.next = 13;\n              return stripePromise;\n\n            case 13:\n              _context.t1 = _context.sent;\n              _context.t2 = initiatePaymentResponse.paymentTracker;\n              _context.t3 = {\n                stripe: _context.t1,\n                sessionId: _context.t2\n              };\n              _context.next = 18;\n              return (0, _context.t0)(_context.t3);\n\n            case 18:\n              _context.next = 22;\n              break;\n\n            case 20:\n              _context.prev = 20;\n              _context.t4 = _context[\"catch\"](6);\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[6, 20]]);\n    }));\n\n    return function handleClick() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var makePaymentRequest = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref2) {\n      var courseId, backend, token, router, frontend, formData, res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              courseId = _ref2.courseId, backend = _ref2.backend, token = _ref2.token, router = _ref2.router, frontend = _ref2.frontend;\n              formData = new window.FormData();\n              formData.append(\"courseid\", courseId);\n              formData.append(\"metadata\", JSON.stringify({\n                cancelUrl: \"\".concat(frontend).concat(router.asPath),\n                successUrl: \"\".concat(frontend, \"/purchase\"),\n                sourceUrl: router.asPath\n              }));\n              _context2.next = 6;\n              return fetch(\"\".concat(backend, \"/payment/initiate\"), {\n                method: \"POST\",\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                },\n                body: formData\n              });\n\n            case 6:\n              res = _context2.sent;\n              return _context2.abrupt(\"return\", res);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function makePaymentRequest(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var redirectToStripeCheckout = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref4) {\n      var stripe, sessionId, result;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              stripe = _ref4.stripe, sessionId = _ref4.sessionId;\n              _context3.next = 3;\n              return stripe.redirectToCheckout({\n                sessionId: sessionId\n              });\n\n            case 3:\n              result = _context3.sent;\n\n              if (result.error) {// console.log(result.error);\n              }\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function redirectToStripeCheckout(_x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsx(Button, {\n    onClick: handleClick,\n    variant: \"contained\",\n    color: \"primary\",\n    children: ENROLL_BUTTON_TEXT\n  });\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    siteInfo: state.siteinfo,\n    auth: state.auth,\n    address: state.address\n  };\n};\n\nexport default connect(mapStateToProps)(Stripe);","map":null,"metadata":{},"sourceType":"module"}