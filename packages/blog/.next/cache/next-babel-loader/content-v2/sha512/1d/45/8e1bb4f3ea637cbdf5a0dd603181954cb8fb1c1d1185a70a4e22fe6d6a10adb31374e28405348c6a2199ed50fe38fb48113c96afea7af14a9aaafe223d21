{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"C:/Users/MGS/Sistemas/temp/courselit/packages/blog/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/MGS/Sistemas/temp/courselit/packages/blog/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React, { useState } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { addressProps, authProps, publicCourse } from \"../../types\";\nimport { ENROLL_BUTTON_TEXT } from \"../../config/strings\"; //import { connect } from \"react-redux\";\n\nimport fetch from \"isomorphic-unfetch\";\nimport { useRouter } from \"next/router\"; //import { networkAction, setAppMessage } from \"../../redux/actions\";\n//import AppMessage from \"../../models/app-message\";\n\nvar Free = function Free(_ref) {\n  var course = _ref.course,\n      auth = _ref.auth,\n      dispatch = _ref.dispatch,\n      address = _ref.address;\n  var router = useRouter();\n\n  var _useState = useState(false),\n      disabled = _useState[0],\n      setDisabled = _useState[1];\n\n  var handleClick = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var initiatePaymentResponse;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              setDisabled(true); //dispatch(networkAction(true));\n\n              _context.next = 4;\n              return makePaymentRequest({\n                courseId: course.id,\n                backend: address.backend,\n                token: auth.token,\n                dispatch: dispatch\n              });\n\n            case 4:\n              initiatePaymentResponse = _context.sent;\n\n              if (!(initiatePaymentResponse.status === 401)) {\n                _context.next = 8;\n                break;\n              }\n\n              router.push(\"/login?redirect=\".concat(router.asPath));\n              return _context.abrupt(\"return\");\n\n            case 8:\n              _context.next = 10;\n              return initiatePaymentResponse.json();\n\n            case 10:\n              initiatePaymentResponse = _context.sent;\n\n              if (initiatePaymentResponse.status === \"success\") {\n                router.reload();\n              } else if (initiatePaymentResponse.status === \"failed\") {//dispatch(setAppMessage(new AppMessage(initiatePaymentResponse.error)));\n              }\n\n              _context.next = 16;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 16:\n              _context.prev = 16;\n              dispatch(networkAction(false));\n              setDisabled(false);\n              return _context.finish(16);\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 14, 16, 20]]);\n    }));\n\n    return function handleClick() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var makePaymentRequest = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref3) {\n      var courseId, backend, token, dispatch, formData, res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              courseId = _ref3.courseId, backend = _ref3.backend, token = _ref3.token, dispatch = _ref3.dispatch;\n              formData = new window.FormData();\n              formData.append(\"courseid\", courseId);\n              _context2.next = 5;\n              return fetch(\"\".concat(backend, \"/payment/initiate\"), {\n                method: \"POST\",\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                },\n                body: formData\n              });\n\n            case 5:\n              res = _context2.sent;\n              return _context2.abrupt(\"return\", res);\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function makePaymentRequest(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsx(Button, {\n    onClick: handleClick,\n    variant: \"contained\",\n    color: \"primary\",\n    disabled: disabled,\n    children: ENROLL_BUTTON_TEXT\n  });\n};\n\n//const mapStateToProps = (state) => ({auth: state.auth,address: state.address,})\n//const mapDispatchToProps = (dispatch) => ({dispatch: dispatch,});\n//export default connect(mapStateToProps, mapDispatchToProps)(Free);\nexport default Free;","map":null,"metadata":{},"sourceType":"module"}