{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\MGS\\\\Sistemas\\\\temp\\\\courselit\\\\packages\\\\blog\\\\components\\\\Public\\\\Items\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\"; //import PropTypes from \"prop-types\";\n//import { connect } from \"react-redux\";\n//import { networkAction } from \"../../../redux/actions\";\n\nimport FetchBuilder from \"../../../lib/fetch\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport { BTN_LOAD_MORE } from \"../../../config/strings\";\nimport Post from \"./Post\"; //import { addressProps, publicCourse } from \"../../../types\";\n\nimport Course from \"./Course\";\nimport { makeStyles } from \"@material-ui/styles\";\nconst useStyles = makeStyles(theme => ({\n  loadMoreBtn: {\n    [theme.breakpoints.up(\"md\")]: {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n\nconst List = props => {\n  const {\n    0: courses,\n    1: setCourses\n  } = useState(props.initialItems || []);\n  const {\n    0: offset,\n    1: setOffset\n  } = useState(2);\n  const {\n    0: shouldShowLoadMoreButton,\n    1: setShouldShowLoadMoreButton\n  } = useState(typeof props.showLoadMoreButton === \"boolean\" ? props.showLoadMoreButton : false);\n  const {\n    generateQuery\n  } = props;\n  const posts = typeof props.posts === \"boolean\" ? props.posts : false;\n  const classes = useStyles();\n  useEffect(() => {\n    getPosts();\n  }, [offset]);\n\n  const getPosts = async () => {\n    try {\n      var _props$address;\n\n      //verify what is it\n      //props.dispatch && props.dispatch(networkAction(true));\n      const fetch = new FetchBuilder().setUrl(`${props === null || props === void 0 ? void 0 : (_props$address = props.address) === null || _props$address === void 0 ? void 0 : _props$address.backend}/graph` || 'localhost:8080').setPayload(generateQuery(offset)).setIsGraphQLEndpoint(true).build();\n      const response = await fetch.exec();\n\n      if (response.courses) {\n        if (response.courses.length > 0) {\n          setCourses([...courses, ...response.courses]);\n        } else {\n          setShouldShowLoadMoreButton(false);\n        }\n      }\n    } finally {\n      props.dispatch && props.dispatch(networkAction(false));\n    }\n  };\n\n  return courses.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      xs: 12,\n      justify: \"space-between\",\n      children: courses.map((x, index) => posts ? /*#__PURE__*/_jsxDEV(Post, _objectSpread({}, x), index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(Course, _objectSpread({}, x), index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 49\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), shouldShowLoadMoreButton && courses.length > 0 && /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        disableElevation: true,\n        onClick: () => setOffset(offset + 1),\n        className: classes.loadMoreBtn,\n        children: BTN_LOAD_MORE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}; //List.propTypes = {\n//  generateQuery: PropTypes.func.isRequired,\n//  initialItems: PropTypes.arrayOf(publicCourse),\n//  showLoadMoreButton: PropTypes.bool,\n//  dispatch: PropTypes.func.isRequired,\n//  posts: PropTypes.bool,\n//  address: addressProps,\n//};\n//const mapStateToProps = (state) => ({address: state.address,})\n//const mapDispatchToProps = (dispatch) => ({  dispatch: dispatch,});\n//export default connect(mapStateToProps, mapDispatchToProps)(List);\n\n\nexport default List;","map":{"version":3,"sources":["C:/Users/MGS/Sistemas/temp/courselit/packages/blog/components/Public/Items/index.js"],"names":["React","useState","useEffect","FetchBuilder","Grid","Button","BTN_LOAD_MORE","Post","Course","makeStyles","useStyles","theme","loadMoreBtn","breakpoints","up","marginLeft","spacing","List","props","courses","setCourses","initialItems","offset","setOffset","shouldShowLoadMoreButton","setShouldShowLoadMoreButton","showLoadMoreButton","generateQuery","posts","classes","getPosts","fetch","setUrl","address","backend","setPayload","setIsGraphQLEndpoint","build","response","exec","length","dispatch","networkAction","map","x","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n//import PropTypes from \"prop-types\";\r\n//import { connect } from \"react-redux\";\r\n//import { networkAction } from \"../../../redux/actions\";\r\nimport FetchBuilder from \"../../../lib/fetch\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport { BTN_LOAD_MORE } from \"../../../config/strings\";\r\nimport Post from \"./Post\";\r\n//import { addressProps, publicCourse } from \"../../../types\";\r\nimport Course from \"./Course\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  loadMoreBtn: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst List = (props) => {\r\n  const [courses, setCourses] = useState(props.initialItems || []);\r\n  const [offset, setOffset] = useState(2);\r\n  const [shouldShowLoadMoreButton, setShouldShowLoadMoreButton] = useState(\r\n    typeof props.showLoadMoreButton === \"boolean\"\r\n      ? props.showLoadMoreButton\r\n      : false\r\n  );\r\n  const { generateQuery } = props;\r\n  const posts = typeof props.posts === \"boolean\" ? props.posts : false;\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [offset]);\r\n\r\n  const getPosts = async () => {\r\n    try {\r\n      //verify what is it\r\n      //props.dispatch && props.dispatch(networkAction(true));\r\n      const fetch = new FetchBuilder()\r\n        .setUrl(`${props?.address?.backend}/graph` || 'localhost:8080')\r\n        .setPayload(generateQuery(offset))\r\n        .setIsGraphQLEndpoint(true)\r\n        .build();\r\n      const response = await fetch.exec();\r\n      if (response.courses) {\r\n        if (response.courses.length > 0) {\r\n          setCourses([...courses, ...response.courses]);\r\n        } else {\r\n          setShouldShowLoadMoreButton(false);\r\n        }\r\n      }\r\n    } finally {\r\n      props.dispatch && props.dispatch(networkAction(false));\r\n    }\r\n  };\r\n\r\n  return courses.length > 0 ? (\r\n    <>\r\n      <Grid item container xs={12} justify=\"space-between\">\r\n        {courses.map((x, index) =>\r\n          posts ? <Post key={index} {...x} /> : <Course key={index} {...x} />\r\n        )}\r\n      </Grid>\r\n      {shouldShowLoadMoreButton && courses.length > 0 && (\r\n        <Grid item xs={12}>\r\n          <Button\r\n            variant=\"contained\"\r\n            disableElevation\r\n            onClick={() => setOffset(offset + 1)}\r\n            className={classes.loadMoreBtn}\r\n          >\r\n            {BTN_LOAD_MORE}\r\n          </Button>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\n\r\n//List.propTypes = {\r\n//  generateQuery: PropTypes.func.isRequired,\r\n//  initialItems: PropTypes.arrayOf(publicCourse),\r\n//  showLoadMoreButton: PropTypes.bool,\r\n//  dispatch: PropTypes.func.isRequired,\r\n//  posts: PropTypes.bool,\r\n//  address: addressProps,\r\n//};\r\n//const mapStateToProps = (state) => ({address: state.address,})\r\n//const mapDispatchToProps = (dispatch) => ({  dispatch: dispatch,});\r\n//export default connect(mapStateToProps, mapDispatchToProps)(List);\r\nexport default List\r\n"]},"metadata":{},"sourceType":"module"}