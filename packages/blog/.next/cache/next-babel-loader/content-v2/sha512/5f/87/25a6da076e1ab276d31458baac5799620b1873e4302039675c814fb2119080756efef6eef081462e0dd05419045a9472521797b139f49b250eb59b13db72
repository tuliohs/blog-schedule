{"ast":null,"code":"/**\r\n * Provides cookie based session management functions.\r\n *\r\n */\nimport Cookies from \"js-cookie\";\nexport var setCookie = function setCookie(_ref) {\n  var key = _ref.key,\n      value = _ref.value,\n      domain = _ref.domain;\n\n  if (true) {\n    Cookies.set(key, value, {\n      expires: 365,\n      domain: domain\n    });\n  }\n};\nexport var getCookie = function getCookie(_ref2) {\n  var key = _ref2.key,\n      domain = _ref2.domain;\n  return true ? Cookies.get(key, {\n    domain: domain\n  }) : null;\n};\nexport var removeCookie = function removeCookie(_ref3) {\n  var key = _ref3.key,\n      domain = _ref3.domain;\n\n  if (true) {\n    Cookies.remove(key, {\n      domain: domain\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/MGS/Sistemas/temp/courselit/packages/blog/lib/session.js"],"names":["Cookies","setCookie","key","value","domain","set","expires","getCookie","get","removeCookie","remove"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,OAAOA,OAAP,MAAoB,WAApB;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAA4B;AAAA,MAAzBC,GAAyB,QAAzBA,GAAyB;AAAA,MAApBC,KAAoB,QAApBA,KAAoB;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AACnD,YAAqB;AACnBJ,IAAAA,OAAO,CAACK,GAAR,CAAYH,GAAZ,EAAiBC,KAAjB,EAAwB;AAAEG,MAAAA,OAAO,EAAE,GAAX;AAAgBF,MAAAA,MAAM,EAANA;AAAhB,KAAxB;AACD;AACF,CAJM;AAMP,OAAO,IAAMG,SAAS,GAAG,SAAZA,SAAY,QAAqB;AAAA,MAAlBL,GAAkB,SAAlBA,GAAkB;AAAA,MAAbE,MAAa,SAAbA,MAAa;AAC5C,SAAO,OAAkBJ,OAAO,CAACQ,GAAR,CAAYN,GAAZ,EAAiB;AAAEE,IAAAA,MAAM,EAANA;AAAF,GAAjB,CAAlB,GAAiD,IAAxD;AACD,CAFM;AAIP,OAAO,IAAMK,YAAY,GAAG,SAAfA,YAAe,QAAqB;AAAA,MAAlBP,GAAkB,SAAlBA,GAAkB;AAAA,MAAbE,MAAa,SAAbA,MAAa;;AAC/C,YAAqB;AACnBJ,IAAAA,OAAO,CAACU,MAAR,CAAeR,GAAf,EAAoB;AAAEE,MAAAA,MAAM,EAANA;AAAF,KAApB;AACD;AACF,CAJM","sourcesContent":["/**\r\n * Provides cookie based session management functions.\r\n *\r\n */\r\n\r\nimport Cookies from \"js-cookie\";\r\n\r\nexport const setCookie = ({ key, value, domain }) => {\r\n  if (process.browser) {\r\n    Cookies.set(key, value, { expires: 365, domain });\r\n  }\r\n};\r\n\r\nexport const getCookie = ({ key, domain }) => {\r\n  return process.browser ? Cookies.get(key, { domain }) : null;\r\n};\r\n\r\nexport const removeCookie = ({ key, domain }) => {\r\n  if (process.browser) {\r\n    Cookies.remove(key, { domain });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}