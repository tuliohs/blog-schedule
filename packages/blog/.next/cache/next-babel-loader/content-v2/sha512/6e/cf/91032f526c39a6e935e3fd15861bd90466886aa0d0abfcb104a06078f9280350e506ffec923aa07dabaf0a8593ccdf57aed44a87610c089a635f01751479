{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\MGS\\\\Sistemas\\\\temp\\\\courselit\\\\packages\\\\blog\\\\components\\\\Public\\\\BaseLayout\\\\Section.js\";\nimport React, { useContext } from \"react\"; //import PropTypes from \"prop-types\";\n//import { connect } from \"react-redux\";\n\nimport { Grid } from \"@material-ui/core\";\nimport WidgetByName from \"./WidgetByName\";\nimport { useRouter } from \"next/router\";\nimport widgets from \"../../../config/widgets\";\nimport MyContext from \"../../../context/MyContext\";\n\nconst Section = ({\n  name\n}) => {\n  const {\n    layout\n  } = useContext(MyContext);\n  const sectionLayout = layout[name];\n  const router = useRouter();\n  return sectionLayout && sectionLayout.length ? /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    item: true,\n    direction: \"column\",\n    children: sectionLayout.map((item, index) => widgets[item].metadata.excludeFromPaths && widgets[item].metadata.excludeFromPaths.includes(router.pathname) ? /*#__PURE__*/_jsxDEV(\"div\", {}, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(WidgetByName, {\n        name: item,\n        section: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}; //Section.propTypes = {\n//  name: PropTypes.string.isRequired,\n//  layout: PropTypes.object.isRequired,\n//};\n//const mapStateToProps = (state) => ({layout: state.layout,})\n//export default connect(mapStateToProps)(Section);\n\n\nexport default Section;","map":{"version":3,"sources":["C:/Users/MGS/Sistemas/temp/courselit/packages/blog/components/Public/BaseLayout/Section.js"],"names":["React","useContext","Grid","WidgetByName","useRouter","widgets","MyContext","Section","name","layout","sectionLayout","router","length","map","item","index","metadata","excludeFromPaths","includes","pathname"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC,C,CACA;AACA;;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAaR,UAAU,CAACK,SAAD,CAA7B;AACA,QAAMI,aAAa,GAAGD,MAAM,CAACD,IAAD,CAA5B;AACA,QAAMG,MAAM,GAAGP,SAAS,EAAxB;AAEA,SAAOM,aAAa,IAAIA,aAAa,CAACE,MAA/B,gBACL,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,IAAI,MAApB;AAAqB,IAAA,SAAS,EAAC,QAA/B;AAAA,cACGF,aAAa,CAACG,GAAd,CAAkB,CAACC,IAAD,EAAOC,KAAP,KACjBV,OAAO,CAACS,IAAD,CAAP,CAAcE,QAAd,CAAuBC,gBAAvB,IACEZ,OAAO,CAACS,IAAD,CAAP,CAAcE,QAAd,CAAuBC,gBAAvB,CAAwCC,QAAxC,CAAiDP,MAAM,CAACQ,QAAxD,CADF,gBAEE,mBAAUJ,KAAV;AAAA;AAAA;AAAA;AAAA,YAFF,gBAIE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA,6BACE,QAAC,YAAD;AAAc,QAAA,IAAI,EAAED,IAApB;AAA0B,QAAA,OAAO,EAAEN;AAAnC;AAAA;AAAA;AAAA;AAAA;AADF,OAAgBO,KAAhB;AAAA;AAAA;AAAA;AAAA,YALH;AADH;AAAA;AAAA;AAAA;AAAA,UADK,gBAcL,qCAdF;AAgBD,CArBD,C,CAuBA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAeR,OAAf","sourcesContent":["import React, { useContext } from \"react\";\r\n//import PropTypes from \"prop-types\";\r\n//import { connect } from \"react-redux\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport WidgetByName from \"./WidgetByName\";\r\nimport { useRouter } from \"next/router\";\r\nimport widgets from \"../../../config/widgets\";\r\nimport MyContext from \"../../../context/MyContext\";\r\n\r\nconst Section = ({ name }) => {\r\n  const { layout } = useContext(MyContext)\r\n  const sectionLayout = layout[name];\r\n  const router = useRouter();\r\n\r\n  return sectionLayout && sectionLayout.length ? (\r\n    <Grid container item direction=\"column\">\r\n      {sectionLayout.map((item, index) =>\r\n        widgets[item].metadata.excludeFromPaths &&\r\n          widgets[item].metadata.excludeFromPaths.includes(router.pathname) ? (\r\n          <div key={index}></div>\r\n        ) : (\r\n          <Grid item key={index}>\r\n            <WidgetByName name={item} section={name} />\r\n          </Grid>\r\n        )\r\n      )}\r\n    </Grid>\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\n\r\n//Section.propTypes = {\r\n//  name: PropTypes.string.isRequired,\r\n//  layout: PropTypes.object.isRequired,\r\n//};\r\n//const mapStateToProps = (state) => ({layout: state.layout,})\r\n//export default connect(mapStateToProps)(Section);\r\nexport default Section\r\n"]},"metadata":{},"sourceType":"module"}