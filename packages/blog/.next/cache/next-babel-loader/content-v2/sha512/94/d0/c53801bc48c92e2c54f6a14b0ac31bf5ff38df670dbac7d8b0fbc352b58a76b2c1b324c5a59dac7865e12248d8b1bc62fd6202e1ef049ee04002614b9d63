{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React, { useContext } from \"react\"; //import PropTypes from \"prop-types\";\n//import { connect } from \"react-redux\";\n\nimport Head from \"next/head\";\nimport { formulateMediaUrl } from \"../../../lib/utils.js\"; //import { addressProps, siteInfoProps } from \"../../../types.js\";\n\nimport Template from \"./Template.js\";\nimport Scaffold from \"./Scaffold\";\nimport MyContext from \"../../../context/MyContext.js\"; //type Props = {\n//  children?: ReactNode;\n//  title?: string;\n//  followLinks?: boolean;\n//  descript?: string;\n//};\n\nconst MasterLayout = ({\n  children,\n  title,\n  props\n}) => {\n  const {\n    siteInfo\n  } = useContext(MyContext);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsxs(\"title\", {\n        children: [title, \" | \", siteInfo === null || siteInfo === void 0 ? void 0 : siteInfo.title]\n      }), (siteInfo === null || siteInfo === void 0 ? void 0 : siteInfo.logopath) && /*#__PURE__*/_jsx(\"link\", {\n        rel: \"icon\",\n        href: formulateMediaUrl(props === null || props === void 0 ? void 0 : props.address.backend, siteInfo === null || siteInfo === void 0 ? void 0 : siteInfo.logopath, true)\n      }), /*#__PURE__*/_jsx(\"link\", {\n        rel: \"icon\",\n        href: siteInfo !== null && siteInfo !== void 0 && siteInfo.logopath ? formulateMediaUrl(props === null || props === void 0 ? void 0 : props.address.backend, siteInfo === null || siteInfo === void 0 ? void 0 : siteInfo.logopath, true) : \"/courselit_backdrop_square.webp\"\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"viewport\",\n        content: \"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\"\n      })]\n    }), /*#__PURE__*/_jsx(Scaffold, {\n      children: /*#__PURE__*/_jsx(Template, {\n        children: children\n      })\n    })]\n  });\n}; //MasterLayout.propTypes = {\n//  children: PropTypes.object,\n//  networkAction: PropTypes.bool,\n//  siteInfo: siteInfoProps?.isRequired,\n//  title: PropTypes.string.isRequired,\n//  layout: PropTypes.object.isRequired,\n//  address: addressProps,\n//};\n//const mapStateToProps = (state) => ({\n//  networkAction: state.networkAction,\n//  siteInfo: state.siteinfo,\n//  layout: state.layout,\n//  address: state.address,\n//});\n//export default connect(mapStateToProps)(MasterLayout);\n\n\nexport default MasterLayout;","map":null,"metadata":{},"sourceType":"module"}