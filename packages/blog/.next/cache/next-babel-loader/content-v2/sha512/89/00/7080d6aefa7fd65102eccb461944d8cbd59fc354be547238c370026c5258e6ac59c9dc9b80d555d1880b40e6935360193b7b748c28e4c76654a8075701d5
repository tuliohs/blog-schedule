{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/MGS/Sistemas/temp/courselit/packages/blog/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/MGS/Sistemas/temp/courselit/packages/blog/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\MGS\\\\Sistemas\\\\temp\\\\courselit\\\\packages\\\\blog\\\\components\\\\CheckoutExternal\\\\Stripe.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { addressProps, authProps, publicCourse, siteInfoProps } from \"../../types\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { ENROLL_BUTTON_TEXT } from \"../../config/strings\";\nimport { connect } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport fetch from \"isomorphic-unfetch\";\n\nvar Stripe = function Stripe(props) {\n  _s();\n\n  var course = props.course,\n      siteInfo = props.siteInfo,\n      auth = props.auth,\n      address = props.address;\n  var stripePromise = loadStripe(siteInfo.stripePublishableKey);\n  var router = useRouter();\n\n  var handleClick = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var initiatePaymentResponse;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return makePaymentRequest({\n                courseId: course.id,\n                backend: address.backend,\n                token: auth.token,\n                frontend: address.frontend,\n                router: router\n              });\n\n            case 2:\n              initiatePaymentResponse = _context.sent;\n\n              if (!(initiatePaymentResponse.status === 401)) {\n                _context.next = 6;\n                break;\n              }\n\n              router.push(\"/login?redirect=\".concat(router.asPath));\n              return _context.abrupt(\"return\");\n\n            case 6:\n              _context.prev = 6;\n              _context.next = 9;\n              return initiatePaymentResponse.json();\n\n            case 9:\n              initiatePaymentResponse = _context.sent;\n              _context.t0 = redirectToStripeCheckout;\n              _context.next = 13;\n              return stripePromise;\n\n            case 13:\n              _context.t1 = _context.sent;\n              _context.t2 = initiatePaymentResponse.paymentTracker;\n              _context.t3 = {\n                stripe: _context.t1,\n                sessionId: _context.t2\n              };\n              _context.next = 18;\n              return (0, _context.t0)(_context.t3);\n\n            case 18:\n              _context.next = 22;\n              break;\n\n            case 20:\n              _context.prev = 20;\n              _context.t4 = _context[\"catch\"](6);\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[6, 20]]);\n    }));\n\n    return function handleClick() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var makePaymentRequest = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref2) {\n      var courseId, backend, token, router, frontend, formData, res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              courseId = _ref2.courseId, backend = _ref2.backend, token = _ref2.token, router = _ref2.router, frontend = _ref2.frontend;\n              formData = new window.FormData();\n              formData.append(\"courseid\", courseId);\n              formData.append(\"metadata\", JSON.stringify({\n                cancelUrl: \"\".concat(frontend).concat(router.asPath),\n                successUrl: \"\".concat(frontend, \"/purchase\"),\n                sourceUrl: router.asPath\n              }));\n              _context2.next = 6;\n              return fetch(\"\".concat(backend, \"/payment/initiate\"), {\n                method: \"POST\",\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                },\n                body: formData\n              });\n\n            case 6:\n              res = _context2.sent;\n              return _context2.abrupt(\"return\", res);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function makePaymentRequest(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var redirectToStripeCheckout = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref4) {\n      var stripe, sessionId, result;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              stripe = _ref4.stripe, sessionId = _ref4.sessionId;\n              _context3.next = 3;\n              return stripe.redirectToCheckout({\n                sessionId: sessionId\n              });\n\n            case 3:\n              result = _context3.sent;\n\n              if (result.error) {// console.log(result.error);\n              }\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function redirectToStripeCheckout(_x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: handleClick,\n    variant: \"contained\",\n    color: \"primary\",\n    children: ENROLL_BUTTON_TEXT\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Stripe, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Stripe;\nStripe.propTypes = {\n  course: publicCourse.isRequired,\n  siteInfo: siteInfoProps,\n  auth: authProps,\n  address: addressProps\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    siteInfo: state.siteinfo,\n    auth: state.auth,\n    address: state.address\n  };\n};\n\nexport default connect(mapStateToProps)(Stripe);\n\nvar _c;\n\n$RefreshReg$(_c, \"Stripe\");","map":{"version":3,"sources":["C:/Users/MGS/Sistemas/temp/courselit/packages/blog/components/CheckoutExternal/Stripe.js"],"names":["React","Button","addressProps","authProps","publicCourse","siteInfoProps","loadStripe","ENROLL_BUTTON_TEXT","connect","useRouter","fetch","Stripe","props","course","siteInfo","auth","address","stripePromise","stripePublishableKey","router","handleClick","makePaymentRequest","courseId","id","backend","token","frontend","initiatePaymentResponse","status","push","asPath","json","redirectToStripeCheckout","paymentTracker","stripe","sessionId","formData","window","FormData","append","JSON","stringify","cancelUrl","successUrl","sourceUrl","method","headers","Authorization","body","res","redirectToCheckout","result","error","propTypes","isRequired","mapStateToProps","state","siteinfo"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport {\r\n  addressProps,\r\n  authProps,\r\n  publicCourse,\r\n  siteInfoProps,\r\n} from \"../../types\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { ENROLL_BUTTON_TEXT } from \"../../config/strings\";\r\nimport { connect } from \"react-redux\";\r\nimport { useRouter } from \"next/router\";\r\nimport fetch from \"isomorphic-unfetch\";\r\n\r\nconst Stripe = (props) => {\r\n  const { course, siteInfo, auth, address } = props;\r\n  const stripePromise = loadStripe(siteInfo.stripePublishableKey);\r\n  const router = useRouter();\r\n\r\n  const handleClick = async () => {\r\n    let initiatePaymentResponse = await makePaymentRequest({\r\n      courseId: course.id,\r\n      backend: address.backend,\r\n      token: auth.token,\r\n      frontend: address.frontend,\r\n      router,\r\n    });\r\n\r\n    if (initiatePaymentResponse.status === 401) {\r\n      router.push(`/login?redirect=${router.asPath}`);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      initiatePaymentResponse = await initiatePaymentResponse.json();\r\n      await redirectToStripeCheckout({\r\n        stripe: await stripePromise,\r\n        sessionId: initiatePaymentResponse.paymentTracker,\r\n      });\r\n    } catch (err) {}\r\n  };\r\n\r\n  const makePaymentRequest = async ({\r\n    courseId,\r\n    backend,\r\n    token,\r\n    router,\r\n    frontend,\r\n  }) => {\r\n    const formData = new window.FormData();\r\n    formData.append(\"courseid\", courseId);\r\n    formData.append(\r\n      \"metadata\",\r\n      JSON.stringify({\r\n        cancelUrl: `${frontend}${router.asPath}`,\r\n        successUrl: `${frontend}/purchase`,\r\n        sourceUrl: router.asPath,\r\n      })\r\n    );\r\n\r\n    const res = await fetch(`${backend}/payment/initiate`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: formData,\r\n    });\r\n\r\n    return res;\r\n  };\r\n\r\n  const redirectToStripeCheckout = async ({ stripe, sessionId }) => {\r\n    const result = await stripe.redirectToCheckout({\r\n      sessionId,\r\n    });\r\n    if (result.error) {\r\n      // console.log(result.error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Button onClick={handleClick} variant=\"contained\" color=\"primary\">\r\n      {ENROLL_BUTTON_TEXT}\r\n    </Button>\r\n  );\r\n};\r\n\r\nStripe.propTypes = {\r\n  course: publicCourse.isRequired,\r\n  siteInfo: siteInfoProps,\r\n  auth: authProps,\r\n  address: addressProps,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  siteInfo: state.siteinfo,\r\n  auth: state.auth,\r\n  address: state.address,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Stripe);\r\n"]},"metadata":{},"sourceType":"module"}