{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport '../styles/globals.css';\nimport React, { useState, useEffect } from 'react';\nimport App from \"next/app\";\nimport { Provider, useStore } from \"react-redux\";\nimport { getCookie } from \"../lib/session.js\";\nimport { JWT_COOKIE_NAME, USERID_COOKIE_NAME } from \"../config/constants.js\"; //import {\n//  signedIn,\n//  updateSiteInfo,\n//  authHasBeenChecked,\n//  updateSiteTheme,\n//  updateSiteLayout,\n//  updateSiteNavigation,\n//  updateBackend,\n//} from \"../redux/actions.js\";\n\nimport { ThemeProvider, unstable_createMuiStrictModeTheme } from \"@material-ui/styles\";\nimport { responsiveFontSizes, createMuiTheme } from \"@material-ui/core\";\nimport { CONSOLE_MESSAGE_THEME_INVALID } from \"../config/strings.js\";\nimport defaultState from '../config/defaultState'; //import wrapper from \"../redux/store.js\";\n//import \"@courselit/rich-text/dist/main.css\";\n\nimport dynamic from \"next/dynamic\";\nconst CodeInjector = dynamic(() => import(\"../components/Public/CodeInjector.js\"), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"../components/Public/CodeInjector.js\")],\n    modules: [\"../components/Public/CodeInjector.js\"]\n  }\n});\nimport { getBackendAddress } from \"../lib/utils.js\";\nimport MyContext from '../context/MyContext';\nconst muiTheme = responsiveFontSizes(createMuiTheme({\n  palette: {\n    primary: {\n      main: '#2A3F54'\n    },\n    secondary: {\n      main: '#ec4d37',\n      dark: '#eee'\n    },\n    error: {\n      main: '#ff1744'\n    },\n    background: {\n      default: '#f5f5f5'\n    },\n    contrastThreshold: 3\n  },\n  overrides: {\n    drawerWidth: 240\n  }\n}));\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  const {\n    0: theme,\n    1: setTheme\n  } = useState(muiTheme);\n  const {\n    0: address,\n    1: setAddress\n  } = useState({});\n  const {\n    0: siteInfo,\n    1: setSiteInfo\n  } = useState({\n    title: \"Forgetion\",\n    subtitle: \"Learning Bases in Not Forgetion\",\n    logopath: \"6065dde6d5f9071a90a73a6c\",\n    currencyUnit: \"d\",\n    currencyISOCode: \"a\"\n  });\n  const {\n    0: profile,\n    1: setProfile\n  } = useState({\n    isCreator: false,\n    name: \"\",\n    id: \"\",\n    fetched: false,\n    email: \"\" //purchases: [\"\"],\n\n  });\n  const {\n    0: authProp,\n    1: setAuthProp\n  } = useState({\n    guest: false,\n    token: \"\"\n  });\n  const {\n    0: navigation,\n    1: setNavigation\n  } = useState([{\n    text: \"Home\",\n    destination: \"/\",\n    category: \"main\",\n    newTab: false\n  }]);\n  const {\n    0: layout,\n    1: setLayout\n  } = useState(defaultState.layout); //const muiTheme = responsiveFontSizes(theme);\n  //const { theme, address } = store.getState();\n  //try {\n  //  muiTheme = responsiveFontSizes(\n  //    createMuiTheme(Object.keys(theme.styles).length ? theme.styles : {})\n  //  );\n  //} catch (err) {\n  //  console.warn(CONSOLE_MESSAGE_THEME_INVALID);\n  //  muiTheme = responsiveFontSizes(createMuiTheme({}));\n  //}\n  //const setUpCookies = () => {\n  //  const tokenCookie = getCookie({\n  //    key: JWT_COOKIE_NAME,\n  //    domain: address.domain,\n  //  });\n  //  if (tokenCookie) {\n  //    store.dispatch(\n  //      signedIn(\n  //        getCookie({ key: USERID_COOKIE_NAME, domain: address.domain }),\n  //        tokenCookie\n  //      )\n  //    );\n  //  }\n  //  store.dispatch(authHasBeenChecked());\n  //};\n\n  const removeServerSideInjectedCSS = () => {\n    //???? its usable for more projects\n    const jssStyles = document.querySelector(\"#jss-server-side\");\n\n    if (jssStyles) {\n      jssStyles.parentNode.removeChild(jssStyles);\n    }\n  };\n\n  useEffect(() => {\n    //setUpCookies();\n    removeServerSideInjectedCSS();\n  }, []);\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsx(MyContext.Provider, {\n      value: {\n        siteInfo,\n        profile,\n        authProp,\n        navigation,\n        layout\n      },\n      children: /*#__PURE__*/_jsxs(ThemeProvider, {\n        theme: theme,\n        children: [/*#__PURE__*/_jsx(Component, _objectSpread({}, pageProps)), /*#__PURE__*/_jsx(CodeInjector, {\n          props: {\n            codeForHead: \"<>customization headers</>\"\n          }\n        })]\n      })\n    })\n  });\n} //async function updateSiteTheme(backend) {\n//  let tema;\n//  try {\n//    //dispatch(networkAction(true));\n//    const query = `\n//      { \n//        theme: getTheme {\n//          styles\n//        }\n//      }\n//      `;\n//    const fetch = new FetchBuilder()\n//      .setUrl(`${backend}/graph`)\n//      .setPayload(query)\n//      .setIsGraphQLEndpoint(true)\n//      .build();\n//    const response = await fetch.exec();\n//    tema = response\n//  } catch (e) {\n//    console.log(e, 'erro fetch')\n//  }\n//  return tema\n//}\n//export const getStaticProps  = async () => {\n//export async function getServerSideProps\n//export const getServerSideProps = async (context) => {\n//  const { req } = context;\n//  const courses = await updateSiteTheme(getBackendAddress(\n//    req?.headers?.host || 'localhost:8000'\n//  ));\n//  return { props: { courses } };\n//}\n//MyApp.getInitialProps = async (appContext) => {\n//  const { ctx } = appContext;\n//  if (ctx.req && ctx.req.headers && ctx.req.headers.host) {\n//ctx.store.dispatch(updateBackend(ctx.req.headers.host));\n//await ctx.store.dispatch(updateSiteInfo());\n//await ctx.store.dispatch(updateSiteLayout());\n//await ctx.store.dispatch(updateSiteTheme());\n//await ctx.store.dispatch(updateSiteNavigation());\n//  }\n//  const appProps = await App.getInitialProps(appContext);\n//  return { ...appProps };\n//};\n\n\nexport default MyApp;","map":null,"metadata":{},"sourceType":"module"}